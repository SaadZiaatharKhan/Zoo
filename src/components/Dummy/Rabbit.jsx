/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/Dummy/Rabbit.glb -o src/components/Dummy/Rabbit.jsx -r public 
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations, Html } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'
import { useControls } from 'leva'
import { useEffect, useState } from 'react'

export function Rabbit(props) {
  
  const group = React.useRef()
  const { scene, animations } = useGLTF('/models/Dummy/Rabbit.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  const [animation, setAnimation] = useState("CharacterArmature|CharacterArmature|CharacterArmature|Idle");
  const [hovered, setHovered] = useState(false);
  // const { animation } = useControls({
  //   animation: { value: "CharacterArmature|CharacterArmature|CharacterArmature|Wave", options: Object.keys(actions) },
  // });

  useEffect(() => {
    actions[animation].reset().fadeIn(0.7).play();
    return () => actions[animation].fadeOut(0.7);
  }, [animation]);
  
  return (
    <group ref={group} {...props} dispose={null} 
      onPointerEnter={() => {
        setAnimation("CharacterArmature|CharacterArmature|CharacterArmature|Wave");
        setHovered(true);}} 
      onPointerLeave={() => {
        setAnimation("CharacterArmature|CharacterArmature|CharacterArmature|Idle");
        setHovered(false);
        }}
        >
      <group name="Root_Scene">
        <group name="RootNode">
          <group name="CharacterArmature" rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <primitive object={nodes.Root} />
          </group>
          <skinnedMesh name="Rabbit" geometry={nodes.Rabbit.geometry} material={materials.AtlasMaterial} skeleton={nodes.Rabbit.skeleton} rotation={[-Math.PI / 2, 0, 0]} scale={140} />
          <skinnedMesh name="Eyes" geometry={nodes.Eyes.geometry} material={materials.AtlasMaterial} skeleton={nodes.Eyes.skeleton} rotation={[-Math.PI / 2, 0, 0]} scale={140} />
        </group>
      </group>
      <Html occlude transform>
        <div className={`${hovered ? "intro" : "hideintro"}`}>
          Welcome to Zoo. Use front and back keys to move. Use mouse to look around. Press Escape button for mouse pointer. Click anywhere for first person view.
        </div>
      </Html>
    </group>
  )
}

useGLTF.preload('/models/Dummy/Rabbit.glb')
